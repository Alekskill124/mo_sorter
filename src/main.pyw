import os

from tkinter import *

from mod_organizer_handler import *
from sort import *

ConfigSettings = {"mo_install_path" : "None",
                  "master_profile" : "None"}

AllProfiles = []

# Setting up window
root = Tk()
root.wm_title("Mod Organizer Sorter")
root.minsize(310, 122)

# Probably not the cleanest icon loading solution,
# but at least .ico file does not have to be supplied
from base64 import b64decode
icon_path = "icon_temp.ico"
icon = """AAABAAEAEBAAAAAACABoBQAAFgAAACgkAEAAP//AACQAQAAkAEAAP//AACQAQAAkAEAAP//AACQAQAAkAEAAP//AACQAQAAkAEAAP//AAA="""
icon_data = b64decode(icon)

with open(icon_path, "wb") as icon_file:
    icon_file.write(icon_data)
root.iconbitmap(icon_path)
os.remove(icon_path)
# End of the horrible icon loading solution

def start():

    ConfigSettings["mo_install_path"] = get_mo_path()
    ConfigSettings["master_profile"] = get_master_profile(ConfigSettings["mo_install_path"])

    AllProfiles = get_profiles(ConfigSettings["mo_install_path"])

    frame = Frame(root)
    frame.pack()

    option = StringVar(frame)
    option.set(ConfigSettings["master_profile"])
    profile_pick = OptionMenu(frame, option, *tuple(AllProfiles))
    profile_pick.pack()

    sort_button = Button(frame, text="Sort Mods", fg="red", padx=40, pady=10,
                    command=lambda:sort(ConfigSettings["mo_install_path"], option.get(), AllProfiles, root))
    sort_button.pack()

    help_button = Button(frame, text="Help",
                    command=lambda:show_help(HelpMessage))
    help_button.pack(side=LEFT, pady=10)

    root.mainloop()

def show_help(message):
    messagebox.showinfo("Help", HelpMessage)

if __name__ == "__main__":
    start()
